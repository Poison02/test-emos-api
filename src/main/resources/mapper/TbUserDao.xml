<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.dao.TbUserDao">
<!--    查找用户权限集合-->
    <select id="searchUserPermissions" parameterType="int" resultType="String">
        SELECT DISTINCT p.permission_name
        FROM tb_user u
                 JOIN tb_role r ON JSON_CONTAINS(u.role, CAST(r.id AS CHAR))
                 JOIN tb_permission p ON JSON_CONTAINS(r.permissions, CAST(p.id AS CHAR))
        WHERE u.id = #{userId}
          AND u.status = 1
    </select>

<!--    根据用户id查找用户-->
    <select id="searchById" parameterType="int" resultType="HashMap">
        SELECT id,
               username,
               name,
               sex,
               tel,
               email,
               hiredate,
               role,
               dept_id                                              AS deptId,
               status,
               CAST(AES_DECRYPT(UNHEX(password), username) AS CHAR) AS password
        FROM tb_user
        WHERE id = #{userId}
    </select>

    <!--    用户登录-->
    <select id="login" parameterType="HashMap" resultType="Integer">
        SELECT id
        FROM tb_user
        WHERE username = #{username}
          AND password = HEX(AES_ENCRYPT(#{password}, #{username})) LIMIT 1;
    </select>

    <!--    修改密码-->
    <update id="updatePassword" parameterType="HashMap">
        update tb_user
        set password=HEX(AES_ENCRYPT(#{password}, username))
        where id = #{userId}
    </update>

    <!--    查询用户数据，分页-->
    <select id="searchUserByPage" parameterType="HashMap" resultType="HashMap">
        select
        distinct u.id,
        u.name,
        u.sex,
        u.tel,
        u.email,
        d.dept_name as dept,
        u.hiredate,
        u.root,
        u.status,
        (
        select group_concat(role_name separator ',')
        from tb_role
        where json_contains(u.role, convert(id, char ))
        ) as roles
        from tb_user u
        join tb_role r on json_contains(u.role, convert(r.id, char ))
        left join tb_dept d on u.dept_id=d.id
        where 1=1
        <if test="name!=null">
            and u.name like '%${name}%'
        </if>
        <if test="sex!=null">
            and u.sex=#{sex}
        </if>
        <if test="role!=null">
            and r.role_name=#{role}
        </if>
        <if test="deptId!=null">
            and d.id=#{deptId}
        </if>
        <if test="status!=null">
            and u.status=#{status}
        </if>
        limit #{start}, #{length}
    </select>

    <!--    查询记录数，和分页一起使用-->
    <select id="searchUserCount" parameterType="HashMap" resultType="long">
        select count(*)
        from tb_user u
        join tb_role r on JSON_CONTAINS(u.role, CONVERT(r.id, CHAR))
        where 1=1
        <if test="name!=null">
            and u.name=#{name}
        </if>
        <if test="sex!=null">
            and u.sex=#{sex}
        </if>
        <if test="role!=null">
            and r.role_name=#{role}
        </if>
        <if test="deptId!=null">
            and u.dept_id=#{deptId}
        </if>
        <if test="status!=null">
            and u.status=#{status}
        </if>
    </select>

    <!--    插入用户数据-->
    <insert id="insert" parameterType="com.example.demo.entity.TbUser">
        insert into tb_user
        set
        <if test="username!=null">
            username=#{username},
        </if>
        <if test="password!=null">
            password=HEX(AES_ENCRYPT(#{password}, #{username})),
        </if>
        <if test="openId!=null">
            open_id=#{openId},
        </if>
        <if test="nickname!=null">
            nickname=#{nickname},
        </if>
        <if test="photo!=null">
            photo=#{photo},
        </if>
        <if test="name!=null">
            name=#{name},
        </if>
        <if test="sex!=null">
            sex=#{sex},
        </if>
        <if test="tel!=null">
            tel=#{tel},
        </if>
        <if test="email!=null">
            email=#{email},
        </if>
        <if test="hiredate!=null">
            hiredate=#{hiredate},
        </if>
        role=#{role},
        <if test="root!=null">
            root=#{root},
        </if>
        <if test="deptId!=null">
            dept_id=#{deptId},
        </if>
        status=#{status},
        create_time=#{createTime}
    </insert>

    <!--    更新用户信息-->
    <update id="update" parameterType="HashMap">
        UPDATE tb_user
        SET
        <if test="username!=null and password!=null">
            username = #{username},
            password = HEX(AES_ENCRYPT(#{password},#{username})),
        </if>
        <if test="name!=null">
            name = #{name},
        </if>
        <if test="sex!=null">
            sex = #{sex},
        </if>
        <if test="tel!=null">
            tel = #{tel},
        </if>
        <if test="email!=null">
            email = #{email},
        </if>
        <if test="hiredate!=null">
            hiredate = #{hiredate},
        </if>
        <if test="role!=null">
            role = #{role},
        </if>
        <if test="root!=null">
            root = #{root},
        </if>
        <if test="deptId!=null">
            dept_id = #{deptId},
        </if>
        <if test="status!=null">
            status = #{status},
        </if>
        id=id
        WHERE id=#{userId}
    </update>

    <!--    根据用户id删除用户-->
    <delete id="deleteUserByIds">
        DELETE FROM tb_user
        WHERE id IN
        <foreach collection="array" open="(" separator="," close=")" item="one">
            #{one}
        </foreach>
        AND root=FALSE
    </delete>
</mapper>